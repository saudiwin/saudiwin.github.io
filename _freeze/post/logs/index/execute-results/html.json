{
  "hash": "486ab98fe76d9366d0d23b48f5a72e6a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"What's Logs Got to Do With It?\"\nsubtitle: \"Ordered beta regression can give you comparable, scale-free ATEs that can still be understood in the scale of the original data--all without using logs.\"\nauthor: \"Robert Kubinec\"\ndate: \"2022-12-15T06:00:00\"\nimage: \"../../files/img/headers/logs.jpeg\"\ncategories: [\"R\", \"Elections\",\"Beta Regression\"]\ndescription: \"Ordered beta regression can give you comparable, scale-free ATEs that can still be understood in the scale of the original data--all without using logs.\"\n---\n\n\n\n\n\n\nTwitter (or what's left of it) was recently ablaze with a discussion of two smart working papers, one by [Jiafeng Chen and Jonathan Roth](https://www.jonathandroth.com/assets/files/LogUniqueHOD0_Draft.pdf) and the other by [John Mullahy and Edward Norton](https://www.nber.org/system/files/working_papers/w30735/w30735.pdf). In different ways, they argue against the use of non-linear transformations in applied modeling, especially logarithms (logs). I had been meaning to discuss the subject myself; I've been critical of the logarithmic transformation previously because it has been difficult to put a clear meaning on the transformation in a linear model. Furthermore, the inability of logs to include 0 (log of 0 is undefined or negative infinity, whichever is smaller) was a warning flag that there was a mismatch between what people wanted the math to do, and what it actually did.\n\nWhat I'm going to show in this post is that the [ordered beta regression model](https://www.cambridge.org/core/journals/political-analysis/article/ordered-beta-regression-a-parsimonious-wellfitting-model-for-continuous-data-with-lower-and-upper-bounds/89F4141DA16D4FC217809B5EB45EEE83) can also address issues with logs (and the related inverse hyperbolic sine transformation) because it can produce estimates (including ATEs) that are based on proportions, and thus naturally scale-free. When the scale of the outcome is an issue, the ordered beta regression can help address that problem by estimating regression coefficients or treatment effects that do not vary with scale and also include 0s.\n\nThe two papers presented above approach the log issue in different ways, which makes them both fascinating when read together. Mullahy and Norton take a more traditional econometric approach, discussing how the log and hyperbolic sine transformations are heavily influenced by the constant chosen to either \"bump\" zeros to 1s for the log or to scale the hyperbolic sine. Chen and Roth use different notation to discuss how the logarithmic transformation affects estimation of an average treatment effect (ATE) using the potential outcomes framework in the causal inference literature.\n\nBoth sets of authors point out that these transformations end up changing either linear regression coefficients or estimated ATEs in ways that are not immediately obvious. Using economic theory, Mullahy and Norton discuss how adding 1 to any zero value in a model in order to use logs results in the model weighting estimates by the proportion of 0s and non-0 values in the data, or what they call the \"intensive\" and \"extensive\" margin. The regression coefficient will vary depending on whether 0s are replaced by 1, 0.9, 0.8, 0.7... etc. There simply isn't one good value that can be added to the data to allow a logarithm to be well-defined.\n\nChen and Roth make the point that the estimate of an ATE can vary with different scaling functions such as logarithms. As they put it,\n\n> Our results above show that ATEs for common transformations such as $log(1 + Y)$ and $arcsinh(Y)$ can not be interpreted as percentage effects, given that their magnitudes depend arbitrarily on the units of the outcome.\n\nIn other words, once you transform the outcome using one of these functions, we no longer know for sure that we will get the same ATE if we change the units, i.e. from dollars to cents, when using one of these common transformations. Chen and Roth's suggestion, which is similar as well to Mullahy and Norton, is to consider using models that incorporate 0s (two-part models, also known as hurdles/zero-inflated models) or simple GLMs like the Poisson regression, which has had an amazing resurgence on [Twitter at the moment](https://twitter.com/jmwooldridge/status/1363828456136523779). (No idea, though, if Poisson's momentum will last through the 2024 election.)\n\n## Simulation\n\nI next use simulations to discuss this issue to show practically what the authors are talking about and also demonstrate how `ordbetareg` can estimate scale-free ATEs.\n\nI simulate data that matches what the articles discuss: highly skewed outcomes with zeroes. To do so I'll simulate a two-part or hurdle model in which the ATE influences the first part (the probability of a 0) and the second part (a conventional log-normal distribution strictly greater than 0). The ATE will influence both the probability of 0s, which at baseline is 10% of total observations, and the mean of the non-0 (log-normal) distribution. I will assume a true ATE of +1 on the log/logit scale. I can then simulate the potential outcomes, Y1 and Y0, as independent distributions with a difference of the ATE.\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nate <- 1\nN <- 500\nY0 <- ifelse(runif(N)<0.9,rlnorm(N),0)\nY1 <- ifelse(runif(N)<plogis(qlogis(0.9) + ate),\n             rlnorm(N,meanlog=ate),\n             0)\n```\n:::\n\n\n\n\nWe can take a quick glance at the distributions:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nhist(Y1)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/hist-1.png){fig-align='center' width=672}\n:::\n\n```{.r .cell-code}\nhist(Y0)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/hist-2.png){fig-align='center' width=672}\n:::\n:::\n\n\n\n\nThe proportion of zeroes in Y0 is 0.086 and the proportion of zeroes in Y1 is 0.034.\n\nWe can then do some conventional comparisons of the treatment and control group, a t-test and linear model fit:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nt.test(Y1,Y0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tWelch Two Sample t-test\n\ndata:  Y1 and Y0\nt = 11.45, df = 639.8, p-value < 2.2e-16\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n 2.423978 3.427505\nsample estimates:\nmean of x mean of y \n 4.330918  1.405176 \n```\n\n\n:::\n\n```{.r .cell-code}\nt_data <- tibble(Y=c(Y0,Y1),T=c(rep(0,N),rep(1,N)))\nmod1 <- lm(Y ~ T,data=t_data)\nsummary(mod1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = Y ~ T, data = t_data)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-4.331 -1.839 -0.795  0.423 48.338 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)   1.4052     0.1807   7.777 1.84e-14 ***\nT             2.9257     0.2555  11.450  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 4.04 on 998 degrees of freedom\nMultiple R-squared:  0.1161,\tAdjusted R-squared:  0.1152 \nF-statistic: 131.1 on 1 and 998 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n\n\n\nThe linear model and the t-test do not return the true ATE as that was simulated on the log scale. However, if we take the log of the estimate, it is pretty close -- log of 2.926 is 1.074. The simulation is not perfect because the ATE will vary across the two parts due to scaling effects, but it will work for our purposes.\n\nAs the papers pointed out, the ATE could change if we use nonlinear transformations such as log with an adjustment such as 1 or 0.1 to replace the zeroes. We will test this by fitting two models, one with an outcome of $log(Y+1)$ and the other with $log(Y+0.01)$. We can then make a table of the model results with the `modelsummary` package:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nt_data <- mutate(t_data,\n                 Y_1=Y + 1,\n                 Y_01=Y + 0.01)\n\ny_mod1 <- lm(log(Y_1) ~ T,data=t_data)\ny_mod2 <- lm(log(Y_01) ~ T, data=t_data)\n\nmodelsummary(models=list(`log(Y + 1)`=y_mod1, \n                         `log(Y + 0.01)`=y_mod2))\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<!DOCTYPE html> \n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>tinytable_bmsn8qr24098pqqlr6tc</title>\n    <style>\n.table td.tinytable_css_lmja749fha8u3wj9hi5t, .table th.tinytable_css_lmja749fha8u3wj9hi5t {    border-bottom: solid 0.1em #d3d8dc; }\n.table td.tinytable_css_6tcb2jfillqldhii2ng0, .table th.tinytable_css_6tcb2jfillqldhii2ng0 {    text-align: left; }\n.table td.tinytable_css_f4ekrzmimvtyef130o52, .table th.tinytable_css_f4ekrzmimvtyef130o52 {    text-align: center; }\n.table td.tinytable_css_wbaoosbgfvrs9parv510, .table th.tinytable_css_wbaoosbgfvrs9parv510 {    text-align: center; }\n.table td.tinytable_css_ya5v377c9f93wezmqcuk, .table th.tinytable_css_ya5v377c9f93wezmqcuk {    border-bottom: solid 0.05em black; }\n    </style>\n    <script src=\"https://polyfill.io/v3/polyfill.min.js?features=es6\"></script>\n    <script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"></script>\n    <script>\n    MathJax = {\n      tex: {\n        inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]\n      },\n      svg: {\n        fontCache: 'global'\n      }\n    };\n    </script>\n  </head>\n\n  <body>\n    <div class=\"container\">\n      <table class=\"table table-borderless\" id=\"tinytable_bmsn8qr24098pqqlr6tc\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        \n              <tr>\n                <th scope=\"col\"> </th>\n                <th scope=\"col\">log(Y + 1)</th>\n                <th scope=\"col\">log(Y + 0.01)</th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td>(Intercept)</td>\n                  <td>0.706   </td>\n                  <td>-0.430   </td>\n                </tr>\n                <tr>\n                  <td>           </td>\n                  <td>(0.029) </td>\n                  <td>(0.067)  </td>\n                </tr>\n                <tr>\n                  <td>T          </td>\n                  <td>0.650   </td>\n                  <td>1.236    </td>\n                </tr>\n                <tr>\n                  <td>           </td>\n                  <td>(0.041) </td>\n                  <td>(0.095)  </td>\n                </tr>\n                <tr>\n                  <td>Num.Obs.   </td>\n                  <td>1000    </td>\n                  <td>1000     </td>\n                </tr>\n                <tr>\n                  <td>R2         </td>\n                  <td>0.200   </td>\n                  <td>0.146    </td>\n                </tr>\n                <tr>\n                  <td>R2 Adj.    </td>\n                  <td>0.200   </td>\n                  <td>0.145    </td>\n                </tr>\n                <tr>\n                  <td>AIC        </td>\n                  <td>4042.5  </td>\n                  <td>4028.7   </td>\n                </tr>\n                <tr>\n                  <td>BIC        </td>\n                  <td>4057.2  </td>\n                  <td>4043.4   </td>\n                </tr>\n                <tr>\n                  <td>Log.Lik.   </td>\n                  <td>-987.324</td>\n                  <td>-1822.961</td>\n                </tr>\n                <tr>\n                  <td>F          </td>\n                  <td>250.073 </td>\n                  <td>169.999  </td>\n                </tr>\n                <tr>\n                  <td>RMSE       </td>\n                  <td>0.65    </td>\n                  <td>1.50     </td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <script>\n      function styleCell_tinytable_k6chyfbrtqxwrus31w7b(i, j, css_id) {\n        var table = document.getElementById(\"tinytable_bmsn8qr24098pqqlr6tc\");\n        table.rows[i].cells[j].classList.add(css_id);\n      }\n      function insertSpanRow(i, colspan, content) {\n        var table = document.getElementById('tinytable_bmsn8qr24098pqqlr6tc');\n        var newRow = table.insertRow(i);\n        var newCell = newRow.insertCell(0);\n        newCell.setAttribute(\"colspan\", colspan);\n        // newCell.innerText = content;\n        // this may be unsafe, but innerText does not interpret <br>\n        newCell.innerHTML = content;\n      }\n      function spanCell_tinytable_k6chyfbrtqxwrus31w7b(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_bmsn8qr24098pqqlr6tc\");\n        const targetRow = table.rows[i];\n        const targetCell = targetRow.cells[j];\n        for (let r = 0; r < rowspan; r++) {\n          // Only start deleting cells to the right for the first row (r == 0)\n          if (r === 0) {\n            // Delete cells to the right of the target cell in the first row\n            for (let c = colspan - 1; c > 0; c--) {\n              if (table.rows[i + r].cells[j + c]) {\n                table.rows[i + r].deleteCell(j + c);\n              }\n            }\n          }\n          // For rows below the first, delete starting from the target column\n          if (r > 0) {\n            for (let c = colspan - 1; c >= 0; c--) {\n              if (table.rows[i + r] && table.rows[i + r].cells[j]) {\n                table.rows[i + r].deleteCell(j);\n              }\n            }\n          }\n        }\n        // Set rowspan and colspan of the target cell\n        targetCell.rowSpan = rowspan;\n        targetCell.colSpan = colspan;\n      }\n\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(0, 0, 'tinytable_css_lmja749fha8u3wj9hi5t') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(0, 1, 'tinytable_css_lmja749fha8u3wj9hi5t') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(0, 2, 'tinytable_css_lmja749fha8u3wj9hi5t') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(0, 0, 'tinytable_css_6tcb2jfillqldhii2ng0') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(1, 0, 'tinytable_css_6tcb2jfillqldhii2ng0') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(2, 0, 'tinytable_css_6tcb2jfillqldhii2ng0') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(3, 0, 'tinytable_css_6tcb2jfillqldhii2ng0') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(4, 0, 'tinytable_css_6tcb2jfillqldhii2ng0') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(5, 0, 'tinytable_css_6tcb2jfillqldhii2ng0') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(6, 0, 'tinytable_css_6tcb2jfillqldhii2ng0') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(7, 0, 'tinytable_css_6tcb2jfillqldhii2ng0') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(8, 0, 'tinytable_css_6tcb2jfillqldhii2ng0') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(9, 0, 'tinytable_css_6tcb2jfillqldhii2ng0') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(10, 0, 'tinytable_css_6tcb2jfillqldhii2ng0') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(11, 0, 'tinytable_css_6tcb2jfillqldhii2ng0') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(12, 0, 'tinytable_css_6tcb2jfillqldhii2ng0') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(0, 1, 'tinytable_css_f4ekrzmimvtyef130o52') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(1, 1, 'tinytable_css_f4ekrzmimvtyef130o52') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(2, 1, 'tinytable_css_f4ekrzmimvtyef130o52') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(3, 1, 'tinytable_css_f4ekrzmimvtyef130o52') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(4, 1, 'tinytable_css_f4ekrzmimvtyef130o52') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(5, 1, 'tinytable_css_f4ekrzmimvtyef130o52') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(6, 1, 'tinytable_css_f4ekrzmimvtyef130o52') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(7, 1, 'tinytable_css_f4ekrzmimvtyef130o52') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(8, 1, 'tinytable_css_f4ekrzmimvtyef130o52') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(9, 1, 'tinytable_css_f4ekrzmimvtyef130o52') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(10, 1, 'tinytable_css_f4ekrzmimvtyef130o52') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(11, 1, 'tinytable_css_f4ekrzmimvtyef130o52') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(12, 1, 'tinytable_css_f4ekrzmimvtyef130o52') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(0, 2, 'tinytable_css_wbaoosbgfvrs9parv510') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(1, 2, 'tinytable_css_wbaoosbgfvrs9parv510') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(2, 2, 'tinytable_css_wbaoosbgfvrs9parv510') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(3, 2, 'tinytable_css_wbaoosbgfvrs9parv510') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(4, 2, 'tinytable_css_wbaoosbgfvrs9parv510') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(5, 2, 'tinytable_css_wbaoosbgfvrs9parv510') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(6, 2, 'tinytable_css_wbaoosbgfvrs9parv510') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(7, 2, 'tinytable_css_wbaoosbgfvrs9parv510') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(8, 2, 'tinytable_css_wbaoosbgfvrs9parv510') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(9, 2, 'tinytable_css_wbaoosbgfvrs9parv510') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(10, 2, 'tinytable_css_wbaoosbgfvrs9parv510') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(11, 2, 'tinytable_css_wbaoosbgfvrs9parv510') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(12, 2, 'tinytable_css_wbaoosbgfvrs9parv510') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(4, 0, 'tinytable_css_ya5v377c9f93wezmqcuk') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(4, 1, 'tinytable_css_ya5v377c9f93wezmqcuk') })\nwindow.addEventListener('load', function () { styleCell_tinytable_k6chyfbrtqxwrus31w7b(4, 2, 'tinytable_css_ya5v377c9f93wezmqcuk') })\n    </script>\n\n  </body>\n\n</html>\n```\n\n:::\n:::\n\n\n\n\nWe can see that the treatment effects are quite different. To get them back on the same scale, we can try a reverse transform (exponential the coefficient):\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nexp(coef(y_mod1)[2]) - 1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        T \n0.9159342 \n```\n\n\n:::\n\n```{.r .cell-code}\nexp(coef(y_mod2)[2]) - .01\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       T \n3.433134 \n```\n\n\n:::\n:::\n\n\n\n\nWe can see that the reverse transform doesn't improve matters. In either case we end up with a very different coefficient. If we were to interpret the outcome as dollars, such as a salary, then the ATE in the first model would be 0.92 and the ATE in the second would be 3.28. As the papers suggest, changing that constant results in changes in the ATE, and so we need to be careful what constant we choose.\n\nTo see if units matters as the papers also propose, we will divide the outcome by 100 and compare to the original outcome while using the same transformation of $log(Y + 1)$:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nt_data <- mutate(t_data,\n                 Y_1_rescale=(Y/100)+1)\n\ny_mod1_rescale <- lm(log(Y_1_rescale) ~ T,data=t_data)\n\nmodelsummary(models=list(`log(Y + 1) Original`=y_mod1, \n                         `log(Y + 1) Rescaled`=y_mod1_rescale))\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<!DOCTYPE html> \n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>tinytable_l0d795q37l9gp233dj1o</title>\n    <style>\n.table td.tinytable_css_hcmgplj5lgjllx54c5fz, .table th.tinytable_css_hcmgplj5lgjllx54c5fz {    border-bottom: solid 0.1em #d3d8dc; }\n.table td.tinytable_css_d408ep2kt3t21jdu8ikz, .table th.tinytable_css_d408ep2kt3t21jdu8ikz {    text-align: left; }\n.table td.tinytable_css_5vkta7p0v3y92me9jmbw, .table th.tinytable_css_5vkta7p0v3y92me9jmbw {    text-align: center; }\n.table td.tinytable_css_0s1l8o8c1dselxvjy79k, .table th.tinytable_css_0s1l8o8c1dselxvjy79k {    text-align: center; }\n.table td.tinytable_css_wyiejb2svnt5px13gz7c, .table th.tinytable_css_wyiejb2svnt5px13gz7c {    border-bottom: solid 0.05em black; }\n    </style>\n    <script src=\"https://polyfill.io/v3/polyfill.min.js?features=es6\"></script>\n    <script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"></script>\n    <script>\n    MathJax = {\n      tex: {\n        inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]\n      },\n      svg: {\n        fontCache: 'global'\n      }\n    };\n    </script>\n  </head>\n\n  <body>\n    <div class=\"container\">\n      <table class=\"table table-borderless\" id=\"tinytable_l0d795q37l9gp233dj1o\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        \n              <tr>\n                <th scope=\"col\"> </th>\n                <th scope=\"col\">log(Y + 1) Original</th>\n                <th scope=\"col\">log(Y + 1) Rescaled</th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td>(Intercept)</td>\n                  <td>0.706   </td>\n                  <td>0.014   </td>\n                </tr>\n                <tr>\n                  <td>           </td>\n                  <td>(0.029) </td>\n                  <td>(0.002) </td>\n                </tr>\n                <tr>\n                  <td>T          </td>\n                  <td>0.650   </td>\n                  <td>0.027   </td>\n                </tr>\n                <tr>\n                  <td>           </td>\n                  <td>(0.041) </td>\n                  <td>(0.002) </td>\n                </tr>\n                <tr>\n                  <td>Num.Obs.   </td>\n                  <td>1000    </td>\n                  <td>1000    </td>\n                </tr>\n                <tr>\n                  <td>R2         </td>\n                  <td>0.200   </td>\n                  <td>0.125   </td>\n                </tr>\n                <tr>\n                  <td>R2 Adj.    </td>\n                  <td>0.200   </td>\n                  <td>0.124   </td>\n                </tr>\n                <tr>\n                  <td>AIC        </td>\n                  <td>4042.5  </td>\n                  <td>-3735.4 </td>\n                </tr>\n                <tr>\n                  <td>BIC        </td>\n                  <td>4057.2  </td>\n                  <td>-3720.7 </td>\n                </tr>\n                <tr>\n                  <td>Log.Lik.   </td>\n                  <td>-987.324</td>\n                  <td>1898.213</td>\n                </tr>\n                <tr>\n                  <td>F          </td>\n                  <td>250.073 </td>\n                  <td>142.951 </td>\n                </tr>\n                <tr>\n                  <td>RMSE       </td>\n                  <td>0.65    </td>\n                  <td>0.04    </td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <script>\n      function styleCell_tinytable_rwt2tjb55lrsfdxc91v9(i, j, css_id) {\n        var table = document.getElementById(\"tinytable_l0d795q37l9gp233dj1o\");\n        table.rows[i].cells[j].classList.add(css_id);\n      }\n      function insertSpanRow(i, colspan, content) {\n        var table = document.getElementById('tinytable_l0d795q37l9gp233dj1o');\n        var newRow = table.insertRow(i);\n        var newCell = newRow.insertCell(0);\n        newCell.setAttribute(\"colspan\", colspan);\n        // newCell.innerText = content;\n        // this may be unsafe, but innerText does not interpret <br>\n        newCell.innerHTML = content;\n      }\n      function spanCell_tinytable_rwt2tjb55lrsfdxc91v9(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_l0d795q37l9gp233dj1o\");\n        const targetRow = table.rows[i];\n        const targetCell = targetRow.cells[j];\n        for (let r = 0; r < rowspan; r++) {\n          // Only start deleting cells to the right for the first row (r == 0)\n          if (r === 0) {\n            // Delete cells to the right of the target cell in the first row\n            for (let c = colspan - 1; c > 0; c--) {\n              if (table.rows[i + r].cells[j + c]) {\n                table.rows[i + r].deleteCell(j + c);\n              }\n            }\n          }\n          // For rows below the first, delete starting from the target column\n          if (r > 0) {\n            for (let c = colspan - 1; c >= 0; c--) {\n              if (table.rows[i + r] && table.rows[i + r].cells[j]) {\n                table.rows[i + r].deleteCell(j);\n              }\n            }\n          }\n        }\n        // Set rowspan and colspan of the target cell\n        targetCell.rowSpan = rowspan;\n        targetCell.colSpan = colspan;\n      }\n\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(0, 0, 'tinytable_css_hcmgplj5lgjllx54c5fz') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(0, 1, 'tinytable_css_hcmgplj5lgjllx54c5fz') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(0, 2, 'tinytable_css_hcmgplj5lgjllx54c5fz') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(0, 0, 'tinytable_css_d408ep2kt3t21jdu8ikz') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(1, 0, 'tinytable_css_d408ep2kt3t21jdu8ikz') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(2, 0, 'tinytable_css_d408ep2kt3t21jdu8ikz') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(3, 0, 'tinytable_css_d408ep2kt3t21jdu8ikz') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(4, 0, 'tinytable_css_d408ep2kt3t21jdu8ikz') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(5, 0, 'tinytable_css_d408ep2kt3t21jdu8ikz') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(6, 0, 'tinytable_css_d408ep2kt3t21jdu8ikz') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(7, 0, 'tinytable_css_d408ep2kt3t21jdu8ikz') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(8, 0, 'tinytable_css_d408ep2kt3t21jdu8ikz') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(9, 0, 'tinytable_css_d408ep2kt3t21jdu8ikz') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(10, 0, 'tinytable_css_d408ep2kt3t21jdu8ikz') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(11, 0, 'tinytable_css_d408ep2kt3t21jdu8ikz') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(12, 0, 'tinytable_css_d408ep2kt3t21jdu8ikz') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(0, 1, 'tinytable_css_5vkta7p0v3y92me9jmbw') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(1, 1, 'tinytable_css_5vkta7p0v3y92me9jmbw') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(2, 1, 'tinytable_css_5vkta7p0v3y92me9jmbw') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(3, 1, 'tinytable_css_5vkta7p0v3y92me9jmbw') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(4, 1, 'tinytable_css_5vkta7p0v3y92me9jmbw') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(5, 1, 'tinytable_css_5vkta7p0v3y92me9jmbw') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(6, 1, 'tinytable_css_5vkta7p0v3y92me9jmbw') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(7, 1, 'tinytable_css_5vkta7p0v3y92me9jmbw') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(8, 1, 'tinytable_css_5vkta7p0v3y92me9jmbw') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(9, 1, 'tinytable_css_5vkta7p0v3y92me9jmbw') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(10, 1, 'tinytable_css_5vkta7p0v3y92me9jmbw') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(11, 1, 'tinytable_css_5vkta7p0v3y92me9jmbw') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(12, 1, 'tinytable_css_5vkta7p0v3y92me9jmbw') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(0, 2, 'tinytable_css_0s1l8o8c1dselxvjy79k') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(1, 2, 'tinytable_css_0s1l8o8c1dselxvjy79k') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(2, 2, 'tinytable_css_0s1l8o8c1dselxvjy79k') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(3, 2, 'tinytable_css_0s1l8o8c1dselxvjy79k') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(4, 2, 'tinytable_css_0s1l8o8c1dselxvjy79k') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(5, 2, 'tinytable_css_0s1l8o8c1dselxvjy79k') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(6, 2, 'tinytable_css_0s1l8o8c1dselxvjy79k') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(7, 2, 'tinytable_css_0s1l8o8c1dselxvjy79k') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(8, 2, 'tinytable_css_0s1l8o8c1dselxvjy79k') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(9, 2, 'tinytable_css_0s1l8o8c1dselxvjy79k') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(10, 2, 'tinytable_css_0s1l8o8c1dselxvjy79k') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(11, 2, 'tinytable_css_0s1l8o8c1dselxvjy79k') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(12, 2, 'tinytable_css_0s1l8o8c1dselxvjy79k') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(4, 0, 'tinytable_css_wyiejb2svnt5px13gz7c') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(4, 1, 'tinytable_css_wyiejb2svnt5px13gz7c') })\nwindow.addEventListener('load', function () { styleCell_tinytable_rwt2tjb55lrsfdxc91v9(4, 2, 'tinytable_css_wyiejb2svnt5px13gz7c') })\n    </script>\n\n  </body>\n\n</html>\n```\n\n:::\n:::\n\n\n\n\nAgain, we can see that rescaling $Y$ and then applying the $log(Y+1)$ transformation results in a remarkably different ATE. Because dividing by a constant doesn't affect the proportion of zeroes but does affect the non-zero values, the ATE will consequently change when using this transformation.\n\n## `ordbetareg` to the Rescue\n\nWhile the authors propose some solutions to this problem, such as using a two-part model, I want to show that the ordered beta regression can estimate scale-free ATEs if the outcome is normalized; that is, rescaled to between 0 and 1. Here we will let 0 be equal to 0 while 1 will be the sum of the outcome, i.e., the total income of the sample. We can rescale so that each observation in our data is equal to the *proportion* of the total. It corresponds to the following estimand, which I'll call $ATE_n$ for normalized:\n\n$$\nATE_n = E[\\frac{Y1}{Y1+Y0} - \\frac{Y0}{Y1+Y0}]\n$$\n\nCrucially, if we scale the outcome by any value $c$, $c$ will cancel as it will be in both the top and bottom of the fraction. We could estimate this quantity with either OLS or a t-test, but the error term is likely to be misleading as it won't respect the bounds of the outcome (i.e. 0 or 1). This is where ordered beta regression can help. I'll estimate two models, one with the original outcome and the second with the original outcome multiplied by a 100 to test for scaling effects. I will specify the `true_bounds` parameter to be 0 and 1 as by definition there will not be any values at the upper bound of 1.\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nt_data <- mutate(t_data,\n                 Y_n=Y/(sum(Y)),\n                 Y_n_rescale=(Y/100)/(sum(Y/100)))\n\ny_n_mod <- ordbetareg(Y_n ~ T,data=t_data,\n                      chains=1,iter=1000,\n                      true_bounds=c(0,1),refresh=0,\n                      backend=\"cmdstanr\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRunning MCMC with 1 chain...\n\nChain 1 finished in 3.0 seconds.\n```\n\n\n:::\n\n```{.r .cell-code}\ny_n_rescale <- ordbetareg(Y_n_rescale ~ T,data=t_data,\n                          chains=1,iter=1000,\n                          true_bounds=c(0,1),refresh=0,\n                          backend=\"cmdstanr\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRunning MCMC with 1 chain...\n\nChain 1 finished in 3.0 seconds.\n```\n\n\n:::\n\n```{.r .cell-code}\nmodelsummary(models=list(`Normalized Y Original`=y_n_mod, \n                         `Normalized Y Rescaled`=y_n_rescale),\n             statistic=\"conf.int\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<!DOCTYPE html> \n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>tinytable_uo2jivdxd8o2jm8hepeo</title>\n    <style>\n.table td.tinytable_css_eqrbjdv1xv0tky3298hj, .table th.tinytable_css_eqrbjdv1xv0tky3298hj {    border-bottom: solid 0.1em #d3d8dc; }\n.table td.tinytable_css_2x9dos0xw00t2hf2nt1p, .table th.tinytable_css_2x9dos0xw00t2hf2nt1p {    text-align: left; }\n.table td.tinytable_css_rt76km7013e50croaba8, .table th.tinytable_css_rt76km7013e50croaba8 {    text-align: center; }\n.table td.tinytable_css_8paaagmyuk11ou0518pm, .table th.tinytable_css_8paaagmyuk11ou0518pm {    text-align: center; }\n.table td.tinytable_css_goh4rph5tvv2zqo4dkth, .table th.tinytable_css_goh4rph5tvv2zqo4dkth {    border-bottom: solid 0.05em black; }\n    </style>\n    <script src=\"https://polyfill.io/v3/polyfill.min.js?features=es6\"></script>\n    <script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"></script>\n    <script>\n    MathJax = {\n      tex: {\n        inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]\n      },\n      svg: {\n        fontCache: 'global'\n      }\n    };\n    </script>\n  </head>\n\n  <body>\n    <div class=\"container\">\n      <table class=\"table table-borderless\" id=\"tinytable_uo2jivdxd8o2jm8hepeo\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        \n              <tr>\n                <th scope=\"col\"> </th>\n                <th scope=\"col\">Normalized Y Original</th>\n                <th scope=\"col\">Normalized Y Rescaled</th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td>b_Intercept</td>\n                  <td>-7.108            </td>\n                  <td>-7.114            </td>\n                </tr>\n                <tr>\n                  <td>           </td>\n                  <td>[-7.196, -7.011]  </td>\n                  <td>[-7.210, -7.012]  </td>\n                </tr>\n                <tr>\n                  <td>b_T        </td>\n                  <td>0.608             </td>\n                  <td>0.612             </td>\n                </tr>\n                <tr>\n                  <td>           </td>\n                  <td>[0.507, 0.707]    </td>\n                  <td>[0.515, 0.716]    </td>\n                </tr>\n                <tr>\n                  <td>phi        </td>\n                  <td>810.062           </td>\n                  <td>808.721           </td>\n                </tr>\n                <tr>\n                  <td>           </td>\n                  <td>[732.567, 888.675]</td>\n                  <td>[714.157, 890.808]</td>\n                </tr>\n                <tr>\n                  <td>Num.Obs.   </td>\n                  <td>1000              </td>\n                  <td>1000              </td>\n                </tr>\n                <tr>\n                  <td>R2         </td>\n                  <td>0.090             </td>\n                  <td>0.091             </td>\n                </tr>\n                <tr>\n                  <td>ELPD       </td>\n                  <td>5335.8            </td>\n                  <td>5335.9            </td>\n                </tr>\n                <tr>\n                  <td>ELPD s.e.  </td>\n                  <td>74.6              </td>\n                  <td>74.7              </td>\n                </tr>\n                <tr>\n                  <td>LOOIC      </td>\n                  <td>-10671.5          </td>\n                  <td>-10671.8          </td>\n                </tr>\n                <tr>\n                  <td>LOOIC s.e. </td>\n                  <td>149.3             </td>\n                  <td>149.3             </td>\n                </tr>\n                <tr>\n                  <td>WAIC       </td>\n                  <td>-10671.6          </td>\n                  <td>-10671.9          </td>\n                </tr>\n                <tr>\n                  <td>RMSE       </td>\n                  <td>0.00              </td>\n                  <td>0.00              </td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <script>\n      function styleCell_tinytable_iu6s6qhsaauvyu51xlxm(i, j, css_id) {\n        var table = document.getElementById(\"tinytable_uo2jivdxd8o2jm8hepeo\");\n        table.rows[i].cells[j].classList.add(css_id);\n      }\n      function insertSpanRow(i, colspan, content) {\n        var table = document.getElementById('tinytable_uo2jivdxd8o2jm8hepeo');\n        var newRow = table.insertRow(i);\n        var newCell = newRow.insertCell(0);\n        newCell.setAttribute(\"colspan\", colspan);\n        // newCell.innerText = content;\n        // this may be unsafe, but innerText does not interpret <br>\n        newCell.innerHTML = content;\n      }\n      function spanCell_tinytable_iu6s6qhsaauvyu51xlxm(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_uo2jivdxd8o2jm8hepeo\");\n        const targetRow = table.rows[i];\n        const targetCell = targetRow.cells[j];\n        for (let r = 0; r < rowspan; r++) {\n          // Only start deleting cells to the right for the first row (r == 0)\n          if (r === 0) {\n            // Delete cells to the right of the target cell in the first row\n            for (let c = colspan - 1; c > 0; c--) {\n              if (table.rows[i + r].cells[j + c]) {\n                table.rows[i + r].deleteCell(j + c);\n              }\n            }\n          }\n          // For rows below the first, delete starting from the target column\n          if (r > 0) {\n            for (let c = colspan - 1; c >= 0; c--) {\n              if (table.rows[i + r] && table.rows[i + r].cells[j]) {\n                table.rows[i + r].deleteCell(j);\n              }\n            }\n          }\n        }\n        // Set rowspan and colspan of the target cell\n        targetCell.rowSpan = rowspan;\n        targetCell.colSpan = colspan;\n      }\n\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(0, 0, 'tinytable_css_eqrbjdv1xv0tky3298hj') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(0, 1, 'tinytable_css_eqrbjdv1xv0tky3298hj') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(0, 2, 'tinytable_css_eqrbjdv1xv0tky3298hj') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(0, 0, 'tinytable_css_2x9dos0xw00t2hf2nt1p') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(1, 0, 'tinytable_css_2x9dos0xw00t2hf2nt1p') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(2, 0, 'tinytable_css_2x9dos0xw00t2hf2nt1p') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(3, 0, 'tinytable_css_2x9dos0xw00t2hf2nt1p') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(4, 0, 'tinytable_css_2x9dos0xw00t2hf2nt1p') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(5, 0, 'tinytable_css_2x9dos0xw00t2hf2nt1p') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(6, 0, 'tinytable_css_2x9dos0xw00t2hf2nt1p') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(7, 0, 'tinytable_css_2x9dos0xw00t2hf2nt1p') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(8, 0, 'tinytable_css_2x9dos0xw00t2hf2nt1p') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(9, 0, 'tinytable_css_2x9dos0xw00t2hf2nt1p') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(10, 0, 'tinytable_css_2x9dos0xw00t2hf2nt1p') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(11, 0, 'tinytable_css_2x9dos0xw00t2hf2nt1p') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(12, 0, 'tinytable_css_2x9dos0xw00t2hf2nt1p') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(13, 0, 'tinytable_css_2x9dos0xw00t2hf2nt1p') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(14, 0, 'tinytable_css_2x9dos0xw00t2hf2nt1p') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(0, 1, 'tinytable_css_rt76km7013e50croaba8') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(1, 1, 'tinytable_css_rt76km7013e50croaba8') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(2, 1, 'tinytable_css_rt76km7013e50croaba8') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(3, 1, 'tinytable_css_rt76km7013e50croaba8') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(4, 1, 'tinytable_css_rt76km7013e50croaba8') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(5, 1, 'tinytable_css_rt76km7013e50croaba8') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(6, 1, 'tinytable_css_rt76km7013e50croaba8') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(7, 1, 'tinytable_css_rt76km7013e50croaba8') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(8, 1, 'tinytable_css_rt76km7013e50croaba8') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(9, 1, 'tinytable_css_rt76km7013e50croaba8') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(10, 1, 'tinytable_css_rt76km7013e50croaba8') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(11, 1, 'tinytable_css_rt76km7013e50croaba8') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(12, 1, 'tinytable_css_rt76km7013e50croaba8') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(13, 1, 'tinytable_css_rt76km7013e50croaba8') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(14, 1, 'tinytable_css_rt76km7013e50croaba8') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(0, 2, 'tinytable_css_8paaagmyuk11ou0518pm') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(1, 2, 'tinytable_css_8paaagmyuk11ou0518pm') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(2, 2, 'tinytable_css_8paaagmyuk11ou0518pm') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(3, 2, 'tinytable_css_8paaagmyuk11ou0518pm') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(4, 2, 'tinytable_css_8paaagmyuk11ou0518pm') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(5, 2, 'tinytable_css_8paaagmyuk11ou0518pm') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(6, 2, 'tinytable_css_8paaagmyuk11ou0518pm') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(7, 2, 'tinytable_css_8paaagmyuk11ou0518pm') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(8, 2, 'tinytable_css_8paaagmyuk11ou0518pm') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(9, 2, 'tinytable_css_8paaagmyuk11ou0518pm') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(10, 2, 'tinytable_css_8paaagmyuk11ou0518pm') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(11, 2, 'tinytable_css_8paaagmyuk11ou0518pm') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(12, 2, 'tinytable_css_8paaagmyuk11ou0518pm') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(13, 2, 'tinytable_css_8paaagmyuk11ou0518pm') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(14, 2, 'tinytable_css_8paaagmyuk11ou0518pm') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(6, 0, 'tinytable_css_goh4rph5tvv2zqo4dkth') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(6, 1, 'tinytable_css_goh4rph5tvv2zqo4dkth') })\nwindow.addEventListener('load', function () { styleCell_tinytable_iu6s6qhsaauvyu51xlxm(6, 2, 'tinytable_css_goh4rph5tvv2zqo4dkth') })\n    </script>\n\n  </body>\n\n</html>\n```\n\n:::\n:::\n\n\n\n\nAs can be seen, both estimates are very close. We can convert these treatment effects to marginal effects using the `marginaleffects` package:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmargin_Y <- marginaleffects(y_n_mod, variables=\"T\")\nsummary(margin_Y)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n Term          Contrast Estimate    2.5 %  97.5 %\n    T mean(1) - mean(0) 0.000887 0.000624 0.00196\n\nColumns: term, contrast, estimate, conf.low, conf.high \n```\n\n\n:::\n:::\n\n\n\n\nThe treatment effect here is miniscule as it represents the proportion of income in the sample accruing to an individual unit. However, we can transform this back to the original scale by simply multiplying the estimated marginal effect for each posterior draw by the sum of Y1 and Y0:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntreatment <- posteriordraws(margin_Y) %>% \n  distinct(draw) %>% \n  mutate(T=draw * sum(t_data$Y))\n\n# calculate a summary/point estimate\nsummary(treatment$T)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  1.585   2.190   2.542   2.812   3.052   9.119 \n```\n\n\n:::\n\n```{.r .cell-code}\n# plot full distribution/uncertainty\nhist(treatment$T)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/transform-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n\n\nDoing so gives us a treatment effect of approximately \\$2.7 dollars on the original scale--or, almost exactly $log 1$ as per our original true ATE. Importantly, the estimated uncertainty of this ATE, which we can visualize by plotting all the posterior draws as a histogram, reflects the skew of the underlying variable, which in this case we would want to capture.\n\nAs the package designer Vincent Arel-Bundock pointed out, I can also do the code above using the `marginaleffects` package directly with the `comparisons` function:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntreatment2 <- avg_comparisons(y_n_mod,\n                          variables=\"T\",\n                          transform=function(x) x * sum(t_data$Y))\n\nprint(paste0(\"The treatment effect estimate is \",\n             round(treatment2$estimate,3),\n             \" with a lower bound of \",\n             round(treatment2$conf.low,3), \n             \" and an upper bound of \",\n             round(treatment2$conf.high,3),\".\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"The treatment effect estimate is 2.543 with a lower bound of 1.788 and an upper bound of 5.631.\"\n```\n\n\n:::\n:::\n\n\n\n\n## Conclusion\n\nFor these reasons, `ordbetareg` can be used to produce ATEs that are scale-free yet can be still be back-transformed to the original scale by rescaling the marginal effects as produced by the `marginaleffects` package. If the aim of the analysis is to estimate an ATE that is comparable across samples and income distributions, yet also doesn't lose its relation to the original data, then `ordbetareg` can provide readily comparable estimates.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}