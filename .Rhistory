ggplot(aes(x=Estimate,y=reorder(stringr::str_wrap(Variables,width = 25),Estimate))) +
geom_errorbarh(aes(xmin=Estimate - 1.96*`Std. Error`,
xmax=Estimate + 1.96*`Std. Error`)) +
geom_text(aes(label=round(Estimate,digits=2)),
size=3,vjust=-.75) +
theme_tufte() +
geom_vline(xintercept=0,linetype=2) +
scale_colour_viridis_d() +
scale_x_continuous(labels=scales::percent_format(scale=1)) +
labs(y="Comparison Period",x="Percentage Change in Daily COVID-19 Cases") +
ggtitle(stringr::str_wrap("Comparison of Mask Mandates Effects both Within-County Over-time and Daily Cross-sections",width = 60))
d1_part_between$coeftable %>%
mutate(Variables=row.names(d1_part_between$coeftable),
Variables=forcats::fct_recode(Variables,
"Ban on >10 Gatherings" = "ban_gather",
"Bars Curbside Only" = "bar_orderCurbside/delivery only",
"No Bar Restrictions" = "bar_orderNo restriction found",
"Bars Open with Limitations" = "bar_orderOpen with limitations",
"Mask Mandate" = "mask_statusPublic Mask Mandate",
"Mask Mandate X Trump Vote" = "mask_statusPublic Mask Mandate:vote_share",
"Median Income" = "median_income",
"% Foreign" = "prop_foreign",
"Restaurant Curbside Only" = "rest_actionCurbside/carryout/delivery only",
"Restaurant Open with Precautions" = "rest_actionOpen with social distancing/reduced seating/enhanced sanitation",
"Stay at Home Advisory" = "stay_statusAdvisory/Recommendation",
"Stay at Home Mandatory" = "stay_statusMandatory - all people",
"Stay at Home Certain Areas" = "stay_statusMandatory - all people in certain areas of state",
"Stay at Home At-risk Certain Areas" = "stay_statusMandatory - at-risk in certain areas of state",
"Stay at Home At Risk Only" = "stay_statusMandatory - at-risk people only",
"Tests" = "test_prop",
"Trump Vote" = "vote_share"
)) %>%
ggplot(aes(x=Estimate,y=reorder(stringr::str_wrap(Variables,width = 25),Estimate))) +
geom_errorbarh(aes(xmin=Estimate - 1.96*`Std. Error`,
xmax=Estimate + 1.96*`Std. Error`)) +
geom_text(aes(label=round(Estimate,digits=2)),
size=2.5,vjust=-.75) +
theme_tufte() +
geom_vline(xintercept=0,linetype=2) +
scale_colour_viridis_d() +
scale_x_continuous(labels=scales::percent_format(scale=1)) +
labs(y="Comparison Period",x="Percentage Change in Daily COVID-19 Cases") +
ggtitle(stringr::str_wrap("Comparison of Mask Mandates Effects both Within-County Over-time and Daily Cross-sections",width = 60))
d1_part_between <- fixest::feols(
cases_diff_log ~ mask_status*vote_share + scale(test_prop) +   vote_share +prop_foreign + scale(median_income) + stay_status + rest_action + bar_order + ban_gather  |
date,
data =
combined_data,
cluster =
"FIPS_State",
weights =
~ pop
)
d1_part_between$coeftable %>%
mutate(Variables=row.names(d1_part_between$coeftable),
Variables=forcats::fct_recode(Variables,
"Ban on >10 Gatherings" = "ban_gather",
"Bars Curbside Only" = "bar_orderCurbside/delivery only",
"No Bar Restrictions" = "bar_orderNo restriction found",
"Bars Open with Limitations" = "bar_orderOpen with limitations",
"Mask Mandate" = "mask_statusPublic Mask Mandate",
"Mask Mandate X Trump Vote" = "mask_statusPublic Mask Mandate:vote_share",
"Median Income" = "median_income",
"% Foreign" = "prop_foreign",
"Restaurant Curbside Only" = "rest_actionCurbside/carryout/delivery only",
"Restaurant Open with Precautions" = "rest_actionOpen with social distancing/reduced seating/enhanced sanitation",
"Stay at Home Advisory" = "stay_statusAdvisory/Recommendation",
"Stay at Home Mandatory" = "stay_statusMandatory - all people",
"Stay at Home Certain Areas" = "stay_statusMandatory - all people in certain areas of state",
"Stay at Home At-risk Certain Areas" = "stay_statusMandatory - at-risk in certain areas of state",
"Stay at Home At Risk Only" = "stay_statusMandatory - at-risk people only",
"Tests" = "test_prop",
"Trump Vote" = "vote_share"
)) %>%
ggplot(aes(x=Estimate,y=reorder(stringr::str_wrap(Variables,width = 25),Estimate))) +
geom_errorbarh(aes(xmin=Estimate - 1.96*`Std. Error`,
xmax=Estimate + 1.96*`Std. Error`)) +
geom_text(aes(label=round(Estimate,digits=2)),
size=2.5,vjust=-.75) +
theme_tufte() +
geom_vline(xintercept=0,linetype=2) +
scale_colour_viridis_d() +
scale_x_continuous(labels=scales::percent_format(scale=1)) +
labs(y="Comparison Period",x="Percentage Change in Daily COVID-19 Cases") +
ggtitle(stringr::str_wrap("Comparison of Mask Mandates Effects both Within-County Over-time and Daily Cross-sections",width = 60))
row.names(d1_part_between$coeftable)
d1_part_between$coeftable %>%
mutate(Variables=row.names(d1_part_between$coeftable),
Variables=forcats::fct_recode(Variables,
"Ban on >10 Gatherings" = "ban_gather",
"Bars Curbside Only" = "bar_orderCurbside/delivery only",
"No Bar Restrictions" = "bar_orderNo restriction found",
"Bars Open with Limitations" = "bar_orderOpen with limitations",
"Mask Mandate" = "mask_statusPublic Mask Mandate",
"Mask Mandate X Trump Vote" = "mask_statusPublic Mask Mandate:vote_share",
"Median Income" = "scale(median_income)",
"% Foreign" = "prop_foreign",
"Restaurant Curbside Only" = "rest_actionCurbside/carryout/delivery only",
"Restaurant Open with Precautions" = "rest_actionOpen with social distancing/reduced seating/enhanced sanitation",
"Stay at Home Advisory" = "stay_statusAdvisory/Recommendation",
"Stay at Home Mandatory" = "stay_statusMandatory - all people",
"Stay at Home Certain Areas" = "stay_statusMandatory - all people in certain areas of state",
"Stay at Home At-risk Certain Areas" = "stay_statusMandatory - at-risk in certain areas of state",
"Stay at Home At Risk Only" = "stay_statusMandatory - at-risk people only",
"Tests" = "scale(test_prop)",
"Trump Vote" = "vote_share"
)) %>%
ggplot(aes(x=Estimate,y=reorder(stringr::str_wrap(Variables,width = 25),Estimate))) +
geom_errorbarh(aes(xmin=Estimate - 1.96*`Std. Error`,
xmax=Estimate + 1.96*`Std. Error`)) +
geom_text(aes(label=round(Estimate,digits=2)),
size=2.5,vjust=-.75) +
theme_tufte() +
geom_vline(xintercept=0,linetype=2) +
scale_colour_viridis_d() +
scale_x_continuous(labels=scales::percent_format(scale=1)) +
labs(y="Comparison Period",x="Percentage Change in Daily COVID-19 Cases") +
ggtitle(stringr::str_wrap("Comparison of Mask Mandates Effects both Within-County Over-time and Daily Cross-sections",width = 60))
d1_part_between$coeftable %>%
mutate(Variables=row.names(d1_part_between$coeftable),
Variables=forcats::fct_recode(Variables,
"Ban on >10 Gatherings" = "ban_gather",
"Bars Curbside Only" = "bar_orderCurbside/delivery only",
"No Bar Restrictions" = "bar_orderNo restriction found",
"Bars Open with Limitations" = "bar_orderOpen with limitations",
"Mask Mandate" = "mask_statusPublic Mask Mandate",
"Mask Mandate X Trump Vote" = "mask_statusPublic Mask Mandate:vote_share",
"Median Income" = "scale(median_income)",
"% Foreign" = "prop_foreign",
"Restaurant Curbside Only" = "rest_actionCurbside/carryout/delivery only",
"Restaurant Open with Precautions" = "rest_actionOpen with social distancing/reduced seating/enhanced sanitation",
"Stay at Home Advisory" = "stay_statusAdvisory/Recommendation",
"Stay at Home Mandatory" = "stay_statusMandatory - all people",
"Stay at Home Certain Areas" = "stay_statusMandatory - all people in certain areas of state",
"Stay at Home At-risk Certain Areas" = "stay_statusMandatory - at-risk in certain areas of state",
"Stay at Home At Risk Only" = "stay_statusMandatory - at-risk people only",
"Tests" = "scale(test_prop)",
"Trump Vote" = "vote_share"
)) %>%
ggplot(aes(x=Estimate,y=reorder(stringr::str_wrap(Variables,width = 25),Estimate))) +
geom_errorbarh(aes(xmin=Estimate - 1.96*`Std. Error`,
xmax=Estimate + 1.96*`Std. Error`)) +
geom_text(aes(label=round(Estimate,digits=2)),
size=2.5,vjust=-.75) +
theme_tufte() +
geom_vline(xintercept=0,linetype=2) +
scale_colour_viridis_d() +
scale_y_discrete(guide = guide_axis(n.dodge = 2)) +
scale_x_continuous(labels=scales::percent_format(scale=1)) +
labs(y="Comparison Period",x="Percentage Change in Daily COVID-19 Cases") +
ggtitle(stringr::str_wrap("Comparison of Mask Mandates Effects both Within-County Over-time and Daily Cross-sections",width = 60))
d1_part_between$coeftable %>%
mutate(Variables=row.names(d1_part_between$coeftable),
Variables=forcats::fct_recode(Variables,
"Ban on >10 Gatherings" = "ban_gather",
"Bars Curbside Only" = "bar_orderCurbside/delivery only",
"No Bar Restrictions" = "bar_orderNo restriction found",
"Bars Open with Limitations" = "bar_orderOpen with limitations",
"Mask Mandate" = "mask_statusPublic Mask Mandate",
"Mask Mandate X Trump Vote" = "mask_statusPublic Mask Mandate:vote_share",
"Median Income" = "scale(median_income)",
"% Foreign" = "prop_foreign",
"Restaurant Curbside Only" = "rest_actionCurbside/carryout/delivery only",
"Restaurant Open with Precautions" = "rest_actionOpen with social distancing/reduced seating/enhanced sanitation",
"Stay at Home Advisory" = "stay_statusAdvisory/Recommendation",
"Stay at Home Mandatory" = "stay_statusMandatory - all people",
"Stay at Home Certain Areas" = "stay_statusMandatory - all people in certain areas of state",
"Stay at Home At-risk Certain Areas" = "stay_statusMandatory - at-risk in certain areas of state",
"Stay at Home At Risk Only" = "stay_statusMandatory - at-risk people only",
"Tests" = "scale(test_prop)",
"Trump Vote" = "vote_share"
)) %>%
ggplot(aes(x=Estimate,y=reorder(Variables,Estimate))) +
geom_errorbarh(aes(xmin=Estimate - 1.96*`Std. Error`,
xmax=Estimate + 1.96*`Std. Error`)) +
geom_text(aes(label=round(Estimate,digits=2)),
size=2.5,vjust=-.75) +
theme_tufte() +
geom_vline(xintercept=0,linetype=2) +
scale_colour_viridis_d() +
scale_y_discrete(guide = guide_axis(n.dodge = 2)) +
scale_x_continuous(labels=scales::percent_format(scale=1)) +
labs(y="Comparison Period",x="Percentage Change in Daily COVID-19 Cases") +
ggtitle(stringr::str_wrap("Comparison of Mask Mandates Effects both Within-County Over-time and Daily Cross-sections",width = 60))
?guide_axis
d1_part_between$coeftable %>%
mutate(Variables=row.names(d1_part_between$coeftable),
Variables=forcats::fct_recode(Variables,
"Ban on >10 Gatherings" = "ban_gather",
"Bars Curbside Only" = "bar_orderCurbside/delivery only",
"No Bar Restrictions" = "bar_orderNo restriction found",
"Bars Open with Limitations" = "bar_orderOpen with limitations",
"Mask Mandate" = "mask_statusPublic Mask Mandate",
"Mask Mandate X Trump Vote" = "mask_statusPublic Mask Mandate:vote_share",
"Median Income" = "scale(median_income)",
"% Foreign" = "prop_foreign",
"Restaurant Curbside Only" = "rest_actionCurbside/carryout/delivery only",
"Restaurant Open with Precautions" = "rest_actionOpen with social distancing/reduced seating/enhanced sanitation",
"Stay at Home Advisory" = "stay_statusAdvisory/Recommendation",
"Stay at Home Mandatory" = "stay_statusMandatory - all people",
"Stay at Home Certain Areas" = "stay_statusMandatory - all people in certain areas of state",
"Stay at Home At-risk Certain Areas" = "stay_statusMandatory - at-risk in certain areas of state",
"Stay at Home At Risk Only" = "stay_statusMandatory - at-risk people only",
"Tests" = "scale(test_prop)",
"Trump Vote" = "vote_share"
)) %>%
ggplot(aes(x=Estimate,y=reorder(stringr::str_wrap(Variables,width = 25),Estimate))) +
geom_errorbarh(aes(xmin=Estimate - 1.96*`Std. Error`,
xmax=Estimate + 1.96*`Std. Error`)) +
geom_text(aes(label=round(Estimate,digits=2)),
size=2.5,vjust=-.75) +
theme_tufte() +
geom_vline(xintercept=0,linetype=2) +
scale_colour_viridis_d() +
scale_x_continuous(labels=scales::percent_format(scale=1)) +
labs(y="Comparison Period",x="Percentage Change in Daily COVID-19 Cases") +
ggtitle(stringr::str_wrap("Comparison of Mask Mandates Effects both Within-County Over-time and Daily Cross-sections",width = 60))
d1_part_between$coeftable %>%
mutate(Variables=row.names(d1_part_between$coeftable),
Variables=forcats::fct_recode(Variables,
"Ban on >10 Gatherings" = "ban_gather",
"Bars Curbside Only" = "bar_orderCurbside/delivery only",
"No Bar Restrictions" = "bar_orderNo restriction found",
"Bars Open with Limitations" = "bar_orderOpen with limitations",
"Mask Mandate" = "mask_statusPublic Mask Mandate",
"Mask Mandate X Trump Vote" = "mask_statusPublic Mask Mandate:vote_share",
"Median Income" = "scale(median_income)",
"% Foreign" = "prop_foreign",
"Restaurant Curbside Only" = "rest_actionCurbside/carryout/delivery only",
"Restaurant Open with Precautions" = "rest_actionOpen with social distancing/reduced seating/enhanced sanitation",
"Stay at Home Advisory" = "stay_statusAdvisory/Recommendation",
"Stay at Home Mandatory" = "stay_statusMandatory - all people",
"Stay at Home Certain Areas" = "stay_statusMandatory - all people in certain areas of state",
"Stay at Home At-risk Certain Areas" = "stay_statusMandatory - at-risk in certain areas of state",
"Stay at Home At Risk Only" = "stay_statusMandatory - at-risk people only",
"Tests" = "scale(test_prop)",
"Trump Vote" = "vote_share"
)) %>%
ggplot(aes(x=Estimate,y=reorder(stringr::str_wrap(Variables,width = 25),Estimate))) +
geom_errorbarh(aes(xmin=Estimate - 1.96*`Std. Error`,
xmax=Estimate + 1.96*`Std. Error`)) +
geom_text(aes(label=round(Estimate,digits=2)),
size=2.5,vjust=-.75) +
theme_tufte() +
geom_vline(xintercept=0,linetype=2) +
scale_colour_viridis_d() +
scale_x_continuous(labels=scales::percent_format(scale=1)) +
labs(y="Comparison Period",x="Percentage Change in Daily COVID-19 Cases") +
ggtitle(stringr::str_wrap("Trump Vote Share Interaction with Mask Mandates",width = 60))
install.packages("did")
require(did)
?att_gt
d1_part_between <- att_gt(yname="cases_diff_log",
gname="changes",
idname="fips",
tname="date",
xformla=~vote_share + scale(test_prop) +   vote_share +prop_foreign + scale(median_income) + stay_status + rest_action + bar_order + ban_gather,
control_group="notyettreated",
anticipation=3,
cores=3,
est_method="reg")
d1_part_between <- att_gt(yname="cases_diff_log",
gname="changes",
idname="fips",
tname="date",
xformla=~vote_share + scale(test_prop) +   vote_share +prop_foreign + scale(median_income) + stay_status + rest_action + bar_order + ban_gather,
control_group="notyettreated",
anticipation=3,
cores=3,
est_method="reg",
data=combined_data)
d1_part_between <- combined_data %>%
ungroup %>%
mutate(date_num=as.numeric(date),
date_num=date_num - min(date_num)) %>%
att_gt(yname="cases_diff_log",
gname="changes",
idname="fips",
tname="date",
xformla=~vote_share + scale(test_prop) +   vote_share +prop_foreign + scale(median_income) + stay_status + rest_action + bar_order + ban_gather,
control_group="notyettreated",
anticipation=3,
cores=3,
est_method="reg",
data=combined_data)
d1_part_between <- combined_data %>%
ungroup %>%
mutate(date_num=as.numeric(date),
date_num=date_num - min(date_num)) %>%
att_gt(yname="cases_diff_log",
gname="changes",
idname="fips",
tname="date_num",
xformla=~vote_share + scale(test_prop) +   vote_share +prop_foreign + scale(median_income) + stay_status + rest_action + bar_order + ban_gather,
control_group="notyettreated",
anticipation=3,
cores=3,
est_method="reg",
data=combined_data)
d1_part_between <- combined_data %>%
ungroup %>%
mutate(date_num=as.numeric(date),
date_num=date_num - min(date_num)) %>%
as.data.frame %>%
att_gt(yname="cases_diff_log",
gname="changes",
idname="fips",
tname="date_num",
xformla=~vote_share + scale(test_prop) +   vote_share +prop_foreign + scale(median_income) + stay_status + rest_action + bar_order + ban_gather,
control_group="notyettreated",
anticipation=3,
cores=3,
est_method="reg",
data=combined_data)
combined_data %>%
ungroup %>%
mutate(date_num=as.numeric(date),
date_num=date_num - min(date_num)) %>% View
data(mpdta)
View(mpdta)
d1_part_between <- combined_data %>%
ungroup %>%
mutate(date_num=as.numeric(date),
date_num=date_num - min(date_num)) %>%
group_by(fips) %>%
mutate(first_treat=ifelse(length(unique(date_num))>0,
unique(date_num[n_day_after==1])[1],
0))
View(d1_part_between)
table(d1_part_between$first_treat)
combined_data <- combined_data %>%
ungroup %>%
mutate(date_num=as.numeric(date),
date_num=date_num - min(date_num)) %>%
group_by(fips) %>%
mutate(first_treat=ifelse(length(unique(date_num))>0,
unique(date_num[n_day_after==1])[1],
0))
combined_data %>%
att_gt(yname="cases_diff_log",
gname="changes",
idname="fips",
tname="date_num",
xformla=~vote_share + scale(test_prop) +   vote_share +prop_foreign + scale(median_income) + stay_status + rest_action + bar_order + ban_gather,
control_group="notyettreated",
anticipation=3,
cores=3,
est_method="reg",
data=combined_data)
combined_data <- combined_data %>%
ungroup %>%
mutate(date_num=as.numeric(date),
date_num=date_num - min(date_num),
fips_num=as.numeric(factor(fips))) %>%
group_by(fips) %>%
mutate(first_treat=ifelse(length(unique(date_num))>0,
unique(date_num[n_day_after==1])[1],
0))
combined_data %>%
att_gt(yname="cases_diff_log",
gname="changes",
idname="fips",
tname="date_num",
xformla=~vote_share + scale(test_prop) +   vote_share +prop_foreign + scale(median_income) + stay_status + rest_action + bar_order + ban_gather,
control_group="notyettreated",
anticipation=3,
cores=3,
est_method="reg",
data=combined_data)
combined_data %>%
att_gt(yname="cases_diff_log",
gname="changes",
idname="fips_num",
tname="date_num",
xformla=~vote_share + scale(test_prop) +   vote_share +prop_foreign + scale(median_income) + stay_status + rest_action + bar_order + ban_gather,
control_group="notyettreated",
anticipation=3,
cores=3,
est_method="reg",
data=combined_data)
checkc <- group_by(combined_data,fips) %>% summarize(n_treat=length(unique(first_treat)))
View(checkc)
checkc <- group_by(combined_data,fips) %>% summarize(n_treat=unique(first_treat))
combined_data %>%
att_gt(yname="cases_diff_log",
gname="first_treat",
idname="fips_num",
tname="date_num",
xformla=~vote_share + scale(test_prop) +   vote_share +prop_foreign + scale(median_income) + stay_status + rest_action + bar_order + ban_gather,
control_group="notyettreated",
anticipation=3,
cores=3,
est_method="reg",
data=combined_data)
traceback()
combined_data %>%
att_gt(yname="cases_diff_log",
gname="first_treat",
idname="fips_num",
tname="date_num",
xformla=~vote_share + test_prop +   vote_share +prop_foreign + median_income + stay_status + rest_action + bar_order + ban_gather,
control_group="notyettreated",
anticipation=3,
cores=3,
est_method="reg",
data=combined_data)
debugonce(att_gt)
combined_data %>%
att_gt(yname="cases_diff_log",
gname="first_treat",
idname="fips_num",
tname="date_num",
xformla=~vote_share + test_prop +   vote_share +prop_foreign + median_income + stay_status + rest_action + bar_order + ban_gather,
control_group="notyettreated",
anticipation=3,
cores=3,
est_method="reg",
data=combined_data)
debugonce(att_gt)
combined_data %>%
att_gt(yname="cases_diff_log",
gname="first_treat",
idname="fips_num",
tname="date_num",
xformla=~vote_share + test_prop +   vote_share +prop_foreign + median_income + stay_status + rest_action + bar_order + ban_gather,
control_group="notyettreated",
anticipation=3,
cores=3,
est_method="reg",
data=combined_data)
match.call()
debugonce(att_gt)
combined_data %>%
att_gt(yname="cases_diff_log",
gname="first_treat",
idname="fips_num",
tname="date_num",
xformla=~vote_share + test_prop +   vote_share +prop_foreign + median_income + stay_status + rest_action + bar_order + ban_gather,
control_group="notyettreated",
anticipation=3,
cores=3,
est_method="reg",
data=combined_data)
debugonce(att_gt)
combined_data %>%
att_gt(yname="cases_diff_log",
gname="first_treat",
idname="fips_num",
tname="date_num",
xformla=~vote_share + test_prop +   vote_share +prop_foreign + median_income + stay_status + rest_action + bar_order + ban_gather,
control_group="notyettreated",
anticipation=3,
cores=3,
est_method="reg",
data=combined_data)
!panel
panel
combined_data %>%
att_gt(yname="cases_diff_log",
gname="first_treat",
idname="fips_num",
tname="date_num",
xformla=~vote_share + test_prop +   vote_share +prop_foreign + median_income + stay_status + rest_action + bar_order + ban_gather,
control_group="notyettreated",
anticipation=3,panel=TRUE,
cores=3,
est_method="reg",
data=combined_data)
combined_data %>%
att_gt(yname="cases_diff_log",
gname="first_treat",
idname="fips_num",
tname="date_num",
xformla=~vote_share + test_prop +   vote_share +prop_foreign + median_income + stay_status + rest_action + bar_order + ban_gather,
control_group="notyettreated",
anticipation=3,panel=TRUE,allow_unbalanced_panel = F,
cores=3,
est_method="reg",
data=combined_data)
combined_data %>%
as.data.frame %>%
att_gt(yname="cases_diff_log",
gname="first_treat",
idname="fips_num",
tname="date_num",
xformla=~vote_share + test_prop +   vote_share +prop_foreign + median_income + stay_status + rest_action + bar_order + ban_gather,
control_group="notyettreated",
anticipation=3,panel=TRUE,allow_unbalanced_panel = F,
cores=3,
est_method="reg",
data=combined_data)
traceback()
combined_data %>%
as.data.frame %>%
att_gt(yname="cases_diff_log",
gname="first_treat",
idname="fips_num",
tname="date_num",
xformla=~vote_share + test_prop +   vote_share +prop_foreign + median_income + stay_status + rest_action + bar_order + ban_gather,
control_group="notyettreated",
anticipation=3,panel=TRUE,allow_unbalanced_panel = F,
cores=3,weightsname = NULL,
est_method="reg",
data=combined_data)
out1 <- att_gt(yname="lemp",
tname="year",
idname="countyreal",
gname="first.treat",
xformla=~lpop,
data=mpdta)
install.packages("DRDID")
install.packages(c("rlang", "dplyr", "tidyr", "lubridate"))
